// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Auth
{
	/// <summary>
	/// Intermediate data needed to complete account restriction verification during login flow, returned by <see cref="LoginCallbackInfo" /> when the ResultCode is <see cref="Result.AuthAccountFeatureRestricted" />
	/// The URI inside should be exposed to the user for entry in a web browser. The URI must be copied out of this struct before completion of the callback.
	/// </summary>
	public class AccountFeatureRestrictedInfo
	{
		/// <summary>
		/// API Version: Set this to <see cref="AuthInterface.AccountfeaturerestrictedinfoApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return AuthInterface.AccountfeaturerestrictedinfoApiLatest; } }

		/// <summary>
		/// The end-user verification URI. Users must be asked to open the page in a browser to address the restrictions
		/// </summary>
		public string VerificationURI { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct AccountFeatureRestrictedInfoInternal : IDisposable
	{
		private int m_ApiVersion;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_VerificationURI;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public string VerificationURI
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_VerificationURI, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_VerificationURI, value); }
		}

		public void Dispose()
		{
		}
	}
}