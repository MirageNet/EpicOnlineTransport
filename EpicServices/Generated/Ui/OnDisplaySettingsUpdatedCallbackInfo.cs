// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.UI
{
	public class OnDisplaySettingsUpdatedCallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="UIInterface.AddNotifyDisplaySettingsUpdated" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// True when any portion of the overlay is visible.
		/// </summary>
		public bool IsVisible { get; set; }

		/// <summary>
		/// True when the overlay has switched to exclusive input mode.
		/// While in exclusive input mode, no keyboard or mouse input will be sent to the game.
		/// </summary>
		public bool IsExclusiveInput { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct OnDisplaySettingsUpdatedCallbackInfoInternal : ICallbackInfo
	{
		private IntPtr m_ClientData;
		private int m_IsVisible;
		private int m_IsExclusiveInput;

		public object ClientData
		{
			get
			{
				var value = Helper.GetDefault<object>();
				Helper.TryMarshalGet(m_ClientData, out value);
				return value;
			}
		}

		public IntPtr ClientDataAddress { get { return m_ClientData; } }

		public bool IsVisible
		{
			get
			{
				var value = Helper.GetDefault<bool>();
				Helper.TryMarshalGet(m_IsVisible, out value);
				return value;
			}
		}

		public bool IsExclusiveInput
		{
			get
			{
				var value = Helper.GetDefault<bool>();
				Helper.TryMarshalGet(m_IsExclusiveInput, out value);
				return value;
			}
		}
	}
}