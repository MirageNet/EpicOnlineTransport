// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices
{
	public sealed class EpicAccountId : Handle
	{
		public EpicAccountId(IntPtr innerHandle) : base(innerHandle)
		{
		}

		/// <summary>
		/// Check whether or not the given Epic Online Services Account ID is considered valid
		/// </summary>
		/// <param name="accountId">The Epic Online Services Account ID to check for validity</param>
		/// <returns>
		/// 1 if the <see cref="EpicAccountId" /> is valid, otherwise 0
		/// </returns>
		public bool IsValid()
		{
			var funcResult = EOS_EpicAccountId_IsValid(InnerHandle);
			var funcResultReturn = Helper.GetDefault<bool>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Retrieve a null-terminated string-ified Epic Online Services Account ID from an <see cref="EpicAccountId" />. This is useful for replication of Epic Online Services Account IDs in multiplayer games.
		/// This string will be no larger than <see cref="Common.EpicaccountidMaxLength" /> + 1 and will only contain UTF8-encoded printable characters (excluding the null-terminator).
		/// </summary>
		/// <param name="accountId">The Epic Online Services Account ID for which to retrieve the string-ified version.</param>
		/// <param name="outBuffer">The buffer into which the character data should be written</param>
		/// <param name="inOutBufferLength">
		/// The size of the OutBuffer in characters.
		/// The input buffer should include enough space to be null-terminated.
		/// When the function returns, this parameter will be filled with the length of the string copied into OutBuffer including the null termination character.
		/// </param>
		/// <returns>
		/// An <see cref="Result" /> that indicates whether the Epic Online Services Account ID string was copied into the OutBuffer.
		/// <see cref="Result.Success" /> - The OutBuffer was filled, and InOutBufferLength contains the number of characters copied into OutBuffer including the null terminator.
		/// <see cref="Result.InvalidParameters" /> - Either OutBuffer or InOutBufferLength were passed as NULL parameters.
		/// <see cref="Result.InvalidUser" /> - The AccountId is invalid and cannot be string-ified
		/// <see cref="Result.LimitExceeded" /> - The OutBuffer is not large enough to receive the Epic Online Services Account ID string. InOutBufferLength contains the required minimum length to perform the operation successfully.
		/// </returns>
		public Result ToString(System.Text.StringBuilder outBuffer, ref int inOutBufferLength)
		{
			var funcResult = EOS_EpicAccountId_ToString(InnerHandle, outBuffer, ref inOutBufferLength);
			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Retrieve an Epic Online Services Account ID from a raw account ID string. The input string must be null-terminated.
		/// </summary>
		/// <param name="accountIdString">The string-ified account ID for which to retrieve the Epic Online Services Account ID</param>
		/// <returns>
		/// The Epic Online Services Account ID that corresponds to the AccountIdString
		/// </returns>
		public static EpicAccountId FromString(string accountIdString)
		{
			var funcResult = EOS_EpicAccountId_FromString(accountIdString);
			var funcResultReturn = Helper.GetDefault<EpicAccountId>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		[DllImport(Config.BinaryName)]
		private static extern IntPtr EOS_EpicAccountId_FromString([MarshalAs(UnmanagedType.LPStr)] string accountIdString);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_EpicAccountId_ToString(IntPtr accountId, System.Text.StringBuilder outBuffer, ref int inOutBufferLength);

		[DllImport(Config.BinaryName)]
		private static extern int EOS_EpicAccountId_IsValid(IntPtr accountId);
	}
}