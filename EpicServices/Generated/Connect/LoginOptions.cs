// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Connect
{
	/// <summary>
	/// Input parameters for the <see cref="ConnectInterface.Login" /> function.
	/// </summary>
	public class LoginOptions
	{
		/// <summary>
		/// API Version: Set this to <see cref="ConnectInterface.LoginApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return ConnectInterface.LoginApiLatest; } }

		/// <summary>
		/// Credentials specified for a given login method
		/// </summary>
		public Credentials Credentials { get; set; }

		/// <summary>
		/// Additional non-authoritative information about the local user.
		/// 
		/// This field is required to be set for user authentication with Apple and Nintendo, as well as with the Device ID feature login. When using other identity providers, set to NULL.
		/// </summary>
		public UserLoginInfo UserLoginInfo { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct LoginOptionsInternal : IDisposable
	{
		private int m_ApiVersion;
		private IntPtr m_Credentials;
		private IntPtr m_UserLoginInfo;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public CredentialsInternal? Credentials
		{
			get
			{
				var value = Helper.GetDefault<CredentialsInternal?>();
				Helper.TryMarshalGet(m_Credentials, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Credentials, value); }
		}

		public UserLoginInfoInternal? UserLoginInfo
		{
			get
			{
				var value = Helper.GetDefault<UserLoginInfoInternal?>();
				Helper.TryMarshalGet(m_UserLoginInfo, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_UserLoginInfo, value); }
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_Credentials);
			Helper.TryMarshalDispose(ref m_UserLoginInfo);
		}
	}
}