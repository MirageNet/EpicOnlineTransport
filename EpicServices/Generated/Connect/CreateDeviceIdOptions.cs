// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Connect
{
	/// <summary>
	/// Input parameters for the <see cref="ConnectInterface.CreateDeviceId" /> function.
	/// </summary>
	public class CreateDeviceIdOptions
	{
		/// <summary>
		/// API Version: Set this to <see cref="ConnectInterface.CreatedeviceidApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return ConnectInterface.CreatedeviceidApiLatest; } }

		/// <summary>
		/// A freeform text description identifying the device type and model,
		/// which can be used in account linking management to allow the player
		/// and customer support to identify different devices linked to an EOS
		/// user keychain. For example 'iPhone 6S' or 'PC Windows'.
		/// 
		/// The input string must be in UTF-8 character format, with a maximum
		/// length of 64 characters. Longer string will be silently truncated.
		/// 
		/// This field is required to be present.
		/// </summary>
		public string DeviceModel { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct CreateDeviceIdOptionsInternal : IDisposable
	{
		private int m_ApiVersion;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_DeviceModel;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public string DeviceModel
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_DeviceModel, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_DeviceModel, value); }
		}

		public void Dispose()
		{
		}
	}
}