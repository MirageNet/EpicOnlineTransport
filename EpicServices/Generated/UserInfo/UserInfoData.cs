// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.UserInfo
{
	/// <summary>
	/// A structure that contains the user information. These structures are created by <see cref="UserInfoInterface.CopyUserInfo" /> and must be passed to <see cref="UserInfoInterface.Release" />.
	/// </summary>
	public class UserInfoData
	{
		/// <summary>
		/// API Version: Set this to <see cref="UserInfoInterface.CopyuserinfoApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return UserInfoInterface.CopyuserinfoApiLatest; } }

		/// <summary>
		/// The Epic Online Services Account ID of the user
		/// </summary>
		public EpicAccountId UserId { get; set; }

		/// <summary>
		/// The name of the owner's country. This may be null
		/// </summary>
		public string Country { get; set; }

		/// <summary>
		/// The display name. This may be null
		/// </summary>
		public string DisplayName { get; set; }

		/// <summary>
		/// The ISO 639 language code for the user's preferred language. This may be null
		/// </summary>
		public string PreferredLanguage { get; set; }

		/// <summary>
		/// A nickname/alias for the target user assigned by the local user. This may be null
		/// </summary>
		public string Nickname { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct UserInfoDataInternal : IDisposable
	{
		private int m_ApiVersion;
		private IntPtr m_UserId;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_Country;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_DisplayName;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_PreferredLanguage;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_Nickname;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public EpicAccountId UserId
		{
			get
			{
				var value = Helper.GetDefault<EpicAccountId>();
				Helper.TryMarshalGet(m_UserId, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_UserId, value); }
		}

		public string Country
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_Country, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Country, value); }
		}

		public string DisplayName
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_DisplayName, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_DisplayName, value); }
		}

		public string PreferredLanguage
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_PreferredLanguage, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_PreferredLanguage, value); }
		}

		public string Nickname
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_Nickname, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Nickname, value); }
		}

		public void Dispose()
		{
		}
	}
}