// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices
{
	/// <summary>
	/// A page query is part of query options. It is used to allow pagination of query results.
	/// </summary>
	public class PageQuery
	{
		/// <summary>
		/// API Version: Set this to <see cref="Common.PagequeryApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return Common.PagequeryApiLatest; } }

		/// <summary>
		/// The index into the ordered query results to start the page at.
		/// </summary>
		public int StartIndex { get; set; }

		/// <summary>
		/// The maximum number of results to have in the page.
		/// </summary>
		public int MaxCount { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct PageQueryInternal : IDisposable
	{
		private int m_ApiVersion;
		private int m_StartIndex;
		private int m_MaxCount;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public int StartIndex
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_StartIndex, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_StartIndex, value); }
		}

		public int MaxCount
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_MaxCount, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_MaxCount, value); }
		}

		public void Dispose()
		{
		}
	}
}