// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Metrics
{
	public class EndPlayerSessionOptionsAccountId
	{
		private MetricsAccountIdType m_AccountIdType;
		private EpicAccountId m_Epic;
		private string m_External;

		public static implicit operator EndPlayerSessionOptionsAccountId(EpicAccountId value)
		{
			return new EndPlayerSessionOptionsAccountId() { Epic = value };
		}

		public static implicit operator EndPlayerSessionOptionsAccountId(string value)
		{
			return new EndPlayerSessionOptionsAccountId() { External = value };
		}

		/// <summary>
		/// The Account ID for the player whose session is ending.
		/// </summary>
		public MetricsAccountIdType AccountIdType { get { return m_AccountIdType; } private set { m_AccountIdType = value; } }

		/// <summary>
		/// An Epic Online Services Account ID. Set this field when AccountIdType is set to <see cref="MetricsAccountIdType.Epic" />.
		/// </summary>
		public EpicAccountId Epic
		{
			get
			{
				var value = Helper.GetDefault<EpicAccountId>();
				Helper.TryMarshalGet(m_Epic, out value, m_AccountIdType, MetricsAccountIdType.Epic);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Epic, value, ref m_AccountIdType, MetricsAccountIdType.Epic, this); }
		}

		/// <summary>
		/// An Account ID for another service. Set this field when AccountIdType is set to <see cref="MetricsAccountIdType.External" />.
		/// </summary>
		public string External
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_External, out value, m_AccountIdType, MetricsAccountIdType.External);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_External, value, ref m_AccountIdType, MetricsAccountIdType.External, this); }
		}
	}

	[StructLayout(LayoutKind.Explicit, Pack = 4)]
	internal struct EndPlayerSessionOptionsAccountIdInternal : IDisposable
	{
		[FieldOffset(0)]
		private MetricsAccountIdType m_AccountIdType;
		[FieldOffset(4)]
		private IntPtr m_Epic;
		[FieldOffset(4)]
		private IntPtr m_External;

		public MetricsAccountIdType AccountIdType
		{
			get
			{
				var value = Helper.GetDefault<MetricsAccountIdType>();
				Helper.TryMarshalGet(m_AccountIdType, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_AccountIdType, value); }
		}

		public EpicAccountId Epic
		{
			get
			{
				var value = Helper.GetDefault<EpicAccountId>();
				Helper.TryMarshalGet(m_Epic, out value, m_AccountIdType, MetricsAccountIdType.Epic);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Epic, value, ref m_AccountIdType, MetricsAccountIdType.Epic, this); }
		}

		public string External
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_External, out value, m_AccountIdType, MetricsAccountIdType.External);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_External, value, ref m_AccountIdType, MetricsAccountIdType.External, this); }
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_External, m_AccountIdType, MetricsAccountIdType.External);
		}
	}
}