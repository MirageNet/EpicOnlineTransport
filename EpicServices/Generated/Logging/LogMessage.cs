// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Logging
{
	/// <summary>
	/// A structure representing a log message
	/// </summary>
	public class LogMessage
	{
		/// <summary>
		/// A string representation of the log message category, encoded in UTF-8. Only valid during the life of the callback, so copy the string if you need it later.
		/// </summary>
		public string Category { get; set; }

		/// <summary>
		/// The log message, encoded in UTF-8. Only valid during the life of the callback, so copy the string if you need it later.
		/// </summary>
		public string Message { get; set; }

		/// <summary>
		/// The log level associated with the message
		/// </summary>
		public LogLevel Level { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct LogMessageInternal : IDisposable
	{
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_Category;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_Message;
		private LogLevel m_Level;

		public string Category
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_Category, out value);
				return value;
			}
		}

		public string Message
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_Message, out value);
				return value;
			}
		}

		public LogLevel Level
		{
			get
			{
				var value = Helper.GetDefault<LogLevel>();
				Helper.TryMarshalGet(m_Level, out value);
				return value;
			}
		}

		public void Dispose()
		{
		}
	}
}