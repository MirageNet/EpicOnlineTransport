// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices
{
	/// <summary>
	/// A page result is part of query callback info. It is used to provide pagination details of query results.
	/// </summary>
	public class PageResult
	{
		/// <summary>
		/// The index into the ordered query results to start the page at.
		/// </summary>
		public int StartIndex { get; set; }

		/// <summary>
		/// The number of results in the current page.
		/// </summary>
		public int Count { get; set; }

		/// <summary>
		/// The number of results associated with they original query options.
		/// </summary>
		public int TotalCount { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct PageResultInternal : IDisposable
	{
		private int m_StartIndex;
		private int m_Count;
		private int m_TotalCount;

		public int StartIndex
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_StartIndex, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_StartIndex, value); }
		}

		public int Count
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_Count, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Count, value); }
		}

		public int TotalCount
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_TotalCount, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_TotalCount, value); }
		}

		public void Dispose()
		{
		}
	}
}