// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Friends
{
	/// <summary>
	/// Structure containing information about a friend status update.
	/// </summary>
	public class OnFriendsUpdateInfo
	{
		/// <summary>
		/// Client-specified data passed into <see cref="FriendsInterface.AddNotifyFriendsUpdate" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The Epic Online Services Account ID of the local user who is receiving the update
		/// </summary>
		public EpicAccountId LocalUserId { get; set; }

		/// <summary>
		/// The Epic Online Services Account ID of the user whose status is being updated.
		/// </summary>
		public EpicAccountId TargetUserId { get; set; }

		/// <summary>
		/// The previous status of the user.
		/// </summary>
		public FriendsStatus PreviousStatus { get; set; }

		/// <summary>
		/// The current status of the user.
		/// </summary>
		public FriendsStatus CurrentStatus { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct OnFriendsUpdateInfoInternal : ICallbackInfo
	{
		private IntPtr m_ClientData;
		private IntPtr m_LocalUserId;
		private IntPtr m_TargetUserId;
		private FriendsStatus m_PreviousStatus;
		private FriendsStatus m_CurrentStatus;

		public object ClientData
		{
			get
			{
				var value = Helper.GetDefault<object>();
				Helper.TryMarshalGet(m_ClientData, out value);
				return value;
			}
		}

		public IntPtr ClientDataAddress { get { return m_ClientData; } }

		public EpicAccountId LocalUserId
		{
			get
			{
				var value = Helper.GetDefault<EpicAccountId>();
				Helper.TryMarshalGet(m_LocalUserId, out value);
				return value;
			}
		}

		public EpicAccountId TargetUserId
		{
			get
			{
				var value = Helper.GetDefault<EpicAccountId>();
				Helper.TryMarshalGet(m_TargetUserId, out value);
				return value;
			}
		}

		public FriendsStatus PreviousStatus
		{
			get
			{
				var value = Helper.GetDefault<FriendsStatus>();
				Helper.TryMarshalGet(m_PreviousStatus, out value);
				return value;
			}
		}

		public FriendsStatus CurrentStatus
		{
			get
			{
				var value = Helper.GetDefault<FriendsStatus>();
				Helper.TryMarshalGet(m_CurrentStatus, out value);
				return value;
			}
		}
	}
}