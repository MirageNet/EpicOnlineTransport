// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Sessions
{
	/// <summary>
	/// Top level details about an active session
	/// </summary>
	public class ActiveSessionInfo
	{
		/// <summary>
		/// API Version: Set this to <see cref="SessionsInterface.ActivesessionInfoApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return SessionsInterface.SessiondetailsInfoApiLatest; } }

		/// <summary>
		/// Name of the session
		/// </summary>
		public string SessionName { get; set; }

		/// <summary>
		/// The Product User ID of the local user who created or joined the session
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// Current state of the session
		/// </summary>
		public OnlineSessionState State { get; set; }

		/// <summary>
		/// Session details
		/// </summary>
		public SessionDetailsInfo SessionDetails { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct ActiveSessionInfoInternal : IDisposable
	{
		private int m_ApiVersion;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_SessionName;
		private IntPtr m_LocalUserId;
		private OnlineSessionState m_State;
		private IntPtr m_SessionDetails;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public string SessionName
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_SessionName, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_SessionName, value); }
		}

		public ProductUserId LocalUserId
		{
			get
			{
				var value = Helper.GetDefault<ProductUserId>();
				Helper.TryMarshalGet(m_LocalUserId, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_LocalUserId, value); }
		}

		public OnlineSessionState State
		{
			get
			{
				var value = Helper.GetDefault<OnlineSessionState>();
				Helper.TryMarshalGet(m_State, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_State, value); }
		}

		public SessionDetailsInfoInternal? SessionDetails
		{
			get
			{
				var value = Helper.GetDefault<SessionDetailsInfoInternal?>();
				Helper.TryMarshalGet(m_SessionDetails, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_SessionDetails, value); }
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_SessionDetails);
		}
	}
}