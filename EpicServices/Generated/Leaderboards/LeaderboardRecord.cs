// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Contains information about a single leaderboard record
	/// </summary>
	public class LeaderboardRecord
	{
		/// <summary>
		/// API Version: Set this to <see cref="LeaderboardsInterface.LeaderboardrecordApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return LeaderboardsInterface.LeaderboardrecordApiLatest; } }

		/// <summary>
		/// The Product User ID assoicated with this record
		/// </summary>
		public ProductUserId UserId { get; set; }

		/// <summary>
		/// Sorted position on leaderboard
		/// </summary>
		public uint Rank { get; set; }

		/// <summary>
		/// Leaderboard score
		/// </summary>
		public int Score { get; set; }

		/// <summary>
		/// The latest display name seen for the user since they last time logged in. This is empty if the user does not have a display name set.
		/// </summary>
		public string UserDisplayName { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct LeaderboardRecordInternal : IDisposable
	{
		private int m_ApiVersion;
		private IntPtr m_UserId;
		private uint m_Rank;
		private int m_Score;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_UserDisplayName;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public ProductUserId UserId
		{
			get
			{
				var value = Helper.GetDefault<ProductUserId>();
				Helper.TryMarshalGet(m_UserId, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_UserId, value); }
		}

		public uint Rank
		{
			get
			{
				var value = Helper.GetDefault<uint>();
				Helper.TryMarshalGet(m_Rank, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Rank, value); }
		}

		public int Score
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_Score, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Score, value); }
		}

		public string UserDisplayName
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_UserDisplayName, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_UserDisplayName, value); }
		}

		public void Dispose()
		{
		}
	}
}