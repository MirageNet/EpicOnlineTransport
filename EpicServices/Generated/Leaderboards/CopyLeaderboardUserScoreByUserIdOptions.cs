// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Leaderboards
{
	/// <summary>
	/// Input parameters for the <see cref="LeaderboardsInterface.CopyLeaderboardUserScoreByUserId" /> function.
	/// </summary>
	public class CopyLeaderboardUserScoreByUserIdOptions
	{
		/// <summary>
		/// API Version: Set this to <see cref="LeaderboardsInterface.CopyleaderboarduserscorebyuseridApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return LeaderboardsInterface.CopyleaderboarduserscorebyuseridApiLatest; } }

		/// <summary>
		/// The Product User ID to look for when copying leaderboard score data from the cache
		/// </summary>
		public ProductUserId UserId { get; set; }

		/// <summary>
		/// The name of the stat that is used to rank this leaderboard
		/// </summary>
		public string StatName { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct CopyLeaderboardUserScoreByUserIdOptionsInternal : IDisposable
	{
		private int m_ApiVersion;
		private IntPtr m_UserId;
		[MarshalAs(UnmanagedType.LPStr)]
		private string m_StatName;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public ProductUserId UserId
		{
			get
			{
				var value = Helper.GetDefault<ProductUserId>();
				Helper.TryMarshalGet(m_UserId, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_UserId, value); }
		}

		public string StatName
		{
			get
			{
				var value = Helper.GetDefault<string>();
				Helper.TryMarshalGet(m_StatName, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_StatName, value); }
		}

		public void Dispose()
		{
		}
	}
}