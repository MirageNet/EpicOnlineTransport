// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Presence
{
	public sealed class PresenceModification : Handle
	{
		public PresenceModification(IntPtr innerHandle) : base(innerHandle)
		{
		}

		/// <summary>
		/// Modifies a user's online status to be the new state.
		/// </summary>
		/// <param name="options">Object containing properties related to setting a user's Status</param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result SetStatus(PresenceModificationSetStatusOptions options)
		{
			var optionsInternal = Helper.CopyProperties<PresenceModificationSetStatusOptionsInternal>(options);

			var funcResult = EOS_PresenceModification_SetStatus(InnerHandle, ref optionsInternal);
			Helper.TryMarshalDispose(ref optionsInternal);

			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Modifies a user's Rich Presence string to a new state. This is the exact value other users will see
		/// when they query the local user's presence.
		/// <seealso cref="PresenceInterface.RichTextMaxValueLength" />
		/// </summary>
		/// <param name="options">Object containing properties related to setting a user's RichText string</param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result SetRawRichText(PresenceModificationSetRawRichTextOptions options)
		{
			var optionsInternal = Helper.CopyProperties<PresenceModificationSetRawRichTextOptionsInternal>(options);

			var funcResult = EOS_PresenceModification_SetRawRichText(InnerHandle, ref optionsInternal);
			Helper.TryMarshalDispose(ref optionsInternal);

			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Modifies one or more rows of user-defined presence data for a local user. At least one InfoData object
		/// must be specified.
		/// <seealso cref="PresenceInterface.DataMaxKeys" />
		/// <seealso cref="PresenceInterface.DataMaxKeyLength" />
		/// <seealso cref="PresenceInterface.DataMaxValueLength" />
		/// </summary>
		/// <param name="options">Object containing an array of new presence data.</param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result SetData(PresenceModificationSetDataOptions options)
		{
			var optionsInternal = Helper.CopyProperties<PresenceModificationSetDataOptionsInternal>(options);

			var funcResult = EOS_PresenceModification_SetData(InnerHandle, ref optionsInternal);
			Helper.TryMarshalDispose(ref optionsInternal);

			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Removes one or more rows of user-defined presence data for a local user. At least one DeleteDataInfo object
		/// must be specified.
		/// <seealso cref="PresenceInterface.DataMaxKeys" />
		/// <seealso cref="PresenceInterface.DataMaxKeyLength" />
		/// <seealso cref="PresenceInterface.DataMaxValueLength" />
		/// </summary>
		/// <param name="options">Object containing an array of new presence data.</param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result DeleteData(PresenceModificationDeleteDataOptions options)
		{
			var optionsInternal = Helper.CopyProperties<PresenceModificationDeleteDataOptionsInternal>(options);

			var funcResult = EOS_PresenceModification_DeleteData(InnerHandle, ref optionsInternal);
			Helper.TryMarshalDispose(ref optionsInternal);

			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Sets your new join info custom game-data string. This is a helper function for reading the presence data related to how a user can be joined.
		/// Its meaning is entirely application dependent.
		/// <seealso cref="PresenceInterface.PresencemodificationJoininfoMaxLength" />
		/// </summary>
		/// <param name="options">Object containing a join info string and associated user data</param>
		/// <returns>
		/// Success if modification was added successfully, otherwise an error code related to the problem
		/// </returns>
		public Result SetJoinInfo(PresenceModificationSetJoinInfoOptions options)
		{
			var optionsInternal = Helper.CopyProperties<PresenceModificationSetJoinInfoOptionsInternal>(options);

			var funcResult = EOS_PresenceModification_SetJoinInfo(InnerHandle, ref optionsInternal);
			Helper.TryMarshalDispose(ref optionsInternal);

			var funcResultReturn = Helper.GetDefault<Result>();
			Helper.TryMarshalGet(funcResult, out funcResultReturn);
			return funcResultReturn;
		}

		/// <summary>
		/// Release the memory associated with an <see cref="PresenceModification" /> handle. This must be called on Handles retrieved from <see cref="PresenceInterface.CreatePresenceModification" />.
		/// This can be safely called on a NULL presence modification handle. This also may be safely called while a call to SetPresence is still pending.
		/// <seealso cref="PresenceInterface.CreatePresenceModification" />
		/// </summary>
		/// <param name="presenceModificationHandle">The presence modification handle to release</param>
		public void Release()
		{
			EOS_PresenceModification_Release(InnerHandle);
		}

		[DllImport(Config.BinaryName)]
		private static extern void EOS_PresenceModification_Release(IntPtr presenceModificationHandle);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_PresenceModification_SetJoinInfo(IntPtr handle, ref PresenceModificationSetJoinInfoOptionsInternal options);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_PresenceModification_DeleteData(IntPtr handle, ref PresenceModificationDeleteDataOptionsInternal options);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_PresenceModification_SetData(IntPtr handle, ref PresenceModificationSetDataOptionsInternal options);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_PresenceModification_SetRawRichText(IntPtr handle, ref PresenceModificationSetRawRichTextOptionsInternal options);

		[DllImport(Config.BinaryName)]
		private static extern Result EOS_PresenceModification_SetStatus(IntPtr handle, ref PresenceModificationSetStatusOptionsInternal options);
	}
}