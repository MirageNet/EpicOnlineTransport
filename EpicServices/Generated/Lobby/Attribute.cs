// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

using System;
using System.Runtime.InteropServices;

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// An attribute and its visibility setting stored with a lobby.
	/// Used to store both lobby and lobby member data
	/// </summary>
	public class Attribute
	{
		/// <summary>
		/// API Version: Set this to <see cref="LobbyInterface.AttributeApiLatest" />.
		/// </summary>
		public int ApiVersion { get { return LobbyInterface.AttributeApiLatest; } }

		/// <summary>
		/// Key/Value pair describing the attribute
		/// </summary>
		public AttributeData Data { get; set; }

		/// <summary>
		/// Is this attribute public or private to the lobby and its members
		/// </summary>
		public LobbyAttributeVisibility Visibility { get; set; }
	}

	[StructLayout(LayoutKind.Sequential, Pack = 8)]
	internal struct AttributeInternal : IDisposable
	{
		private int m_ApiVersion;
		private IntPtr m_Data;
		private LobbyAttributeVisibility m_Visibility;

		public int ApiVersion
		{
			get
			{
				var value = Helper.GetDefault<int>();
				Helper.TryMarshalGet(m_ApiVersion, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_ApiVersion, value); }
		}

		public AttributeDataInternal? Data
		{
			get
			{
				var value = Helper.GetDefault<AttributeDataInternal?>();
				Helper.TryMarshalGet(m_Data, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Data, value); }
		}

		public LobbyAttributeVisibility Visibility
		{
			get
			{
				var value = Helper.GetDefault<LobbyAttributeVisibility>();
				Helper.TryMarshalGet(m_Visibility, out value);
				return value;
			}
			set { Helper.TryMarshalSet(ref m_Visibility, value); }
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_Data);
		}
	}
}